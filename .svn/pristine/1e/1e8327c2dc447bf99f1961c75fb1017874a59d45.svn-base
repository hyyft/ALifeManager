package com.hyyft.noteeverything.dao;

import java.util.ArrayList;
import java.util.List;

import com.hyyft.noteeverything.dao.PlanDbHelperContract.BigTagTableInfo;
import com.hyyft.noteeverything.modal.BigTag;

import android.annotation.SuppressLint;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.renderscript.Sampler.Value;

public class BigTagDao {

	private DaoDbHelper dbHelper;
	private SQLiteDatabase db;
	public BigTagDao(Context context){
		dbHelper = new DaoDbHelper(context);
	}
	
	public void add(BigTag bigTag){
		db = dbHelper.getWritableDatabase();
		ContentValues values  = new ContentValues();
		values.put(BigTagTableInfo.COLUMN_NAME_ID , bigTag.getId() );
		values.put(BigTagTableInfo.COLUMN_NAME_TAG, bigTag.getTag());
		db.insert(BigTagTableInfo.TABLE_NAME, BigTagTableInfo.COLUMN_NAME_TAG , values);
		db.close();
	}
	
	/**
	 * 获取bigtag信息
	 * @param id  
	 * @return
	 */
	@SuppressLint("NewApi")
	public BigTag get(int id){
		db = dbHelper.getWritableDatabase();
		BigTag bigTag = new BigTag();
		Cursor cursor = db.query(true, BigTagTableInfo.TABLE_NAME, null, BigTagTableInfo.COLUMN_NAME_ID+"=?" ,
				new String[]{ String.valueOf(id).toString() } , 
				null, null, null, null, null);
		bigTag.setId(id);
		if( cursor.moveToNext() ){
			bigTag.setTag(cursor.getString(cursor.getColumnIndex(BigTagTableInfo.COLUMN_NAME_TAG)));
		}
		db.close();
		return bigTag;
	}
	
	/**
	 * 返回数据库中所有的bigtag对象
	 * @return
	 */
	@SuppressLint("NewApi")
	public List<BigTag> getAll(){
		List<BigTag>  list = new  ArrayList<BigTag>();
		db = dbHelper.getWritableDatabase();
		BigTag bigTag;
		Cursor cursor = db.query(true, BigTagTableInfo.TABLE_NAME, null, null ,	null , null, null, null, null, null);
		while(cursor.moveToNext()){
			bigTag = new BigTag();
			bigTag.setId(cursor.getInt(cursor.getColumnIndex(BigTagTableInfo.COLUMN_NAME_ID)));
			bigTag.setTag(cursor.getString(cursor.getColumnIndex(BigTagTableInfo.COLUMN_NAME_TAG)));
			list.add(bigTag);
		}
		db.close(); 
		return list; 
	}
	
	/**
	 * 删除指定的数据项
	 * @param id 要删除数据项的id
	 */
	public void delete(int id){
		db = dbHelper.getWritableDatabase();
		if( id==0 ){
			db.delete(BigTagTableInfo.TABLE_NAME, null, null);
			db.close();
			return;
		}
		db.delete(BigTagTableInfo.TABLE_NAME,
				BigTagTableInfo.COLUMN_NAME_ID+"=?", 
				new String[]{ String.valueOf(id) });
		
		db.close();
	}
	
	/**
	 * 修改bigtag中的数据,未经过测试，建议不要使用
	 * @param values a map from column names to new column values
	 * @param id  要修改数据项的id
	 */
	public void update(ContentValues values , int id){
		db = dbHelper.getWritableDatabase();
		db.update(BigTagTableInfo.TABLE_NAME, values,
				BigTagTableInfo.COLUMN_NAME_ID+"=?",
				new String[]{ String.valueOf(id) });
		db.close();
	}
	
	public void initDatabase(){
		ContentValues values = new ContentValues();
		
		db = dbHelper.getWritableDatabase();
		values.put(BigTagTableInfo.COLUMN_NAME_ID, "1");
		values.put(BigTagTableInfo.COLUMN_NAME_TAG, "日常");
		db.insert(BigTagTableInfo.TABLE_NAME, BigTagTableInfo.COLUMN_NAME_TAG , values);
		values.put(BigTagTableInfo.COLUMN_NAME_ID, "2");
		values.put(BigTagTableInfo.COLUMN_NAME_TAG, "娱乐");
		db.insert(BigTagTableInfo.TABLE_NAME, BigTagTableInfo.COLUMN_NAME_TAG , values);
		values.put(BigTagTableInfo.COLUMN_NAME_ID, "3");
		values.put(BigTagTableInfo.COLUMN_NAME_TAG, "工作");
		db.insert(BigTagTableInfo.TABLE_NAME, BigTagTableInfo.COLUMN_NAME_TAG , values);
		values.put(BigTagTableInfo.COLUMN_NAME_ID, "4");
		values.put(BigTagTableInfo.COLUMN_NAME_TAG, "运动");
		db.insert(BigTagTableInfo.TABLE_NAME, BigTagTableInfo.COLUMN_NAME_TAG , values);
		values.put(BigTagTableInfo.COLUMN_NAME_ID, "5");
		values.put(BigTagTableInfo.COLUMN_NAME_TAG, "学习");
		db.insert(BigTagTableInfo.TABLE_NAME, BigTagTableInfo.COLUMN_NAME_TAG , values);
		values.put(BigTagTableInfo.COLUMN_NAME_ID, "6");
		values.put(BigTagTableInfo.COLUMN_NAME_TAG, "旅游");
		db.insert(BigTagTableInfo.TABLE_NAME, BigTagTableInfo.COLUMN_NAME_TAG , values);
			
		
		db.close();
		
	}
}
